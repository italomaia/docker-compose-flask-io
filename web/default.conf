upstream app {
  server app:8000;
}

# use ip_hash if load balancing
upstream app_ws {
  server app:8000;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name ${DOMAINS};
  root /usr/src/ux/dist;

  # SSL
  # ssl on;

  location = / {
    index index.html;
  }

  location / {
    try_files ${DO}uri @app;
  }

  location @app {
    proxy_set_header X-Real-IP ${DO}remote_addr;
    proxy_set_header Host ${DO}host;
    proxy_set_header X-Forwarded-For ${DO}proxy_add_x_forwarded_for;

    proxy_pass http://app;
  }

  location /socket.io {
    proxy_set_header X-Real-IP ${DO}remote_addr;
    proxy_set_header Host ${DO}host;
    proxy_set_header X-Forwarded-For ${DO}proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Upgrade ${DO}http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://app_ws/socket.io;
  }
}

# redirect unsafe http access attempts
server {
	listen 80;
	listen [::]:80;
	server_name ${DOMAINS};

  # used during certificate validation
  location /.well-known {
    allow all;
    try_files ${DO}uri =404;
    break;
  }

  # if we have https, don't let people
  # access with http
  location / {
	  return 301 https://${DO}host${DO}request_uri;
  }
}
